#pragma once
#include <d3d12.h>

namespace moonlight
{

inline void construct_input_layout_v(D3D12_INPUT_ELEMENT_DESC* output)
{
    output[0] = D3D12_INPUT_ELEMENT_DESC{
        "POSITION", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0,
        D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0
    };
}

inline void construct_input_layout_v_t(D3D12_INPUT_ELEMENT_DESC* output)
{
    output[0] = D3D12_INPUT_ELEMENT_DESC{
        "POSITION", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, D3D12_APPEND_ALIGNED_ELEMENT,
        D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0
    };
    output[1] = D3D12_INPUT_ELEMENT_DESC{
        "TEXCOORD", 0, DXGI_FORMAT_R32G32_FLOAT, 0, D3D12_APPEND_ALIGNED_ELEMENT,
        D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0
    };
}

inline void construct_input_layout_v_n(D3D12_INPUT_ELEMENT_DESC* output)
{
    output[0] = D3D12_INPUT_ELEMENT_DESC{
        "POSITION", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, D3D12_APPEND_ALIGNED_ELEMENT,
        D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0
    };
    output[1] = D3D12_INPUT_ELEMENT_DESC{
        "NORMAL", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, D3D12_APPEND_ALIGNED_ELEMENT,
        D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0
    };
}

inline void construct_input_layout_v_n_t(D3D12_INPUT_ELEMENT_DESC* output)
{
    output[0] = D3D12_INPUT_ELEMENT_DESC{
        "POSITION", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, D3D12_APPEND_ALIGNED_ELEMENT,
        D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0
    };
    output[1] = D3D12_INPUT_ELEMENT_DESC{
        "NORMAL", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, D3D12_APPEND_ALIGNED_ELEMENT,
        D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0
    };
    output[2] = D3D12_INPUT_ELEMENT_DESC{
        "TEXCOORD", 0, DXGI_FORMAT_R32G32_FLOAT, 0, D3D12_APPEND_ALIGNED_ELEMENT,
        D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0
    };
}

}